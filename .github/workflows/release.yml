name: Release

on:
  push:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-artifacts:
    name: Build artifacts
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            ocaml-version: 4.14.0
          - build: macos
            os: macos-latest
            ocaml-version: 4.14.0
          - build: windows
            os: windows-latest
            ocaml-version: 4.14.0
    env:
      NAME: commit-msg
      OS: ${{ matrix.build }}
    steps:
      - name: Setup Ocaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-version }}
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Cache
        uses: actions/cache@v3
        with:
          path: |
            ~/_opam
            ~/_build
          key: ${{ runner.os }}
      - name: Create switch
        shell: bash
        run: opam switch create . 4.14.0 --deps-only -y || exit 0
      - name: Build
        shell: bash
        run: dune build --profile release

      - name: Compress artifacts
        shell: bash
        run: |
          mkdir -p ./artifacts
          EXEC=$NAME.exe

          if [[ $GITHUB_REF_TYPE =~ ^tag$ ]]; then
            TAG=$GITHUB_REF_NAME
          else
            TAG=$GITHUB_SHA
          fi

          mv _build/default/src/main.exe ./$EXEC
          tar -czf ./artifacts/$NAME-$OS-$TAG.tar.gz $EXEC
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: |
            ./artifacts
      - name: Archive artifact
        uses: actions/upload-artifact@v2
        with:
          name: result
          path: |
            ./artifacts
  deploy-artifacts:
    name: Deploy artifacts
    if: startsWith(github.ref, 'refs/tags/')
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: result
          path: ./artifacts
      - name: List
        run: find ./artifacts
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: ./artifacts/*.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
